From 2666682fd6b6da77b61d31dd6e96edacafda40b7 Mon Sep 17 00:00:00 2001
From: Nicolas Geoffray <ngeoffray@google.com>
Date: Fri, 7 Jan 2022 16:27:49 +0000
Subject: [PATCH 20/33] Correctly handle intrinsics when not precompiling the
 boot image.

JIT zygote will mark methods from the apex as precompiled, and these can
be intrinsics. Given the flags conflict, just don't mark intrinsics as
precompiled.

Test: boot JIT zygote with primary boot image not precompiled
Change-Id: I9edba04e586befd842a7623f2f0ae3a5ac7109f6
---
 runtime/art_method.h | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/runtime/art_method.h b/runtime/art_method.h
index 44a2f3dac1..e4e0d6d54b 100644
--- a/runtime/art_method.h
+++ b/runtime/art_method.h
@@ -233,7 +233,6 @@ class ArtMethod final {
 
   bool IsPreCompiled() const {
     // kAccCompileDontBother and kAccPreCompiled overlap with kAccIntrinsicBits.
-    // Intrinsics should be compiled in primary boot image, not pre-compiled by JIT.
     static_assert((kAccCompileDontBother & kAccIntrinsicBits) != 0);
     static_assert((kAccPreCompiled & kAccIntrinsicBits) != 0);
     static constexpr uint32_t kMask = kAccIntrinsic | kAccCompileDontBother | kAccPreCompiled;
@@ -244,6 +243,13 @@ class ArtMethod final {
   void SetPreCompiled() REQUIRES_SHARED(Locks::mutator_lock_) {
     DCHECK(IsInvokable());
     DCHECK(IsCompilable());
+    // kAccPreCompiled and kAccCompileDontBother overlaps with kAccIntrinsicBits.
+    // We don't mark the intrinsics as precompiled, which means in JIT zygote
+    // mode, compiled code for intrinsics will not be shared, and apps will
+    // compile intrinsics themselves if needed.
+    if (IsIntrinsic()) {
+      return;
+    }
     AddAccessFlags(kAccPreCompiled | kAccCompileDontBother);
   }
 
-- 
2.37.1

